{"remainingRequest":"/home/darkwing/dev/quality/client/node_modules/babel-loader/lib/index.js!/home/darkwing/dev/quality/client/node_modules/eslint-loader/index.js??ref--13-0!/home/darkwing/dev/quality/client/src/store/index.js","dependencies":[{"path":"/home/darkwing/dev/quality/client/src/store/index.js","mtime":1559034780350},{"path":"/home/darkwing/dev/quality/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/darkwing/dev/quality/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/darkwing/dev/quality/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport http from \"../axios-instance\";\nVue.use(Vuex);\nconst store = new Vuex.Store({\n  modules: {},\n  state: {\n    isAuthenticated: true,\n    loading: false,\n    token: \"\",\n    qrks: [{\n      id: \"aa3aa4-rrt3\",\n      titel: \"Titel\",\n      x_achse_titel: \"Datum\",\n      y_achse_titel: \"Messwert [mL]\",\n      obere_warngrenze: 0.0,\n      untere_warngrenze: 0.0,\n      obere_eingriffsgrenze: 0.0,\n      untere_eingriffsgrenze: 0.0,\n      stdabw: 0.0,\n      mittelwert: 0.0,\n      aktiv: true,\n      messwerte: [{\n        id: \"t9t9ne-adef\",\n        datum: \"16.04.2019\",\n        wert: 10.04,\n        valid: true\n      }, {\n        id: \"t9n2cb-lolo\",\n        datum: \"16.05.2019\",\n        wert: 10.02,\n        valid: false\n      }],\n      bild_pfad: \"https://cdn.vuetifyjs.com/images/cards/desert.jpg\"\n    }, {\n      id: \"ttet-tasdf\",\n      titel: \"Titel 2\",\n      x_achse_titel: \"Datum\",\n      y_achse_titel: \"Messwert [mL]\",\n      obere_warngrenze: 0.0,\n      untere_warngrenze: 0.0,\n      obere_eingriffsgrenze: 0.0,\n      untere_eingriffsgrenze: 0.0,\n      stdabw: 0.0,\n      mittelwert: 0.0,\n      aktiv: true,\n      messwerte: [{\n        id: \"t9t9ne-adef\",\n        datum: \"16.04.2019\",\n        wert: 10.04,\n        valid: false\n      }, {\n        id: \"t9n2cb-lolo\",\n        datum: \"16.05.2019\",\n        wert: 10.02,\n        valid: false\n      }],\n      bild_pfad: \"https://cdn.vuetifyjs.com/images/cards/desert.jpg\"\n    }],\n    serverMessage: \"\"\n  },\n  mutations: {\n    loading: state => {\n      state.loading = !state.loading;\n    },\n    login_success: state => {\n      state.isAuthenticated = true;\n      state.loading = false;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n    },\n    setAllQrk: (state, payload) => {\n      state.qrks = payload.qrks;\n    },\n    setServerMessage: (state, payload) => {\n      state.serverMessage = payload.message;\n    }\n  },\n  actions: {\n    SAVE_QRK({\n      commit,\n      dispatch\n    }, qrk_id, formData) {\n      if (qrk_id === \"\") {\n        commit(\"loading\");\n        http({\n          method: \"post\",\n          url: \"/qrk\",\n          data: {\n            titel: formData.titel,\n            x_achse_titel: formData.x_achse_titel,\n            y_achse_titel: formData.y_achse_titel\n          }\n        }).then(res => {\n          dispatch(\"GET_ALL_QRK\");\n          commit(\"loading\");\n        }).catch(error => {\n          commit(\"loading\");\n          console.log(error);\n        });\n      } else {\n        commit(\"loading\");\n        http.put(`/qrk/${qrk_id}`, payload).then(res => {\n          commit(\"setServerMessage\", res.data);\n          dispatch(\"GET_ALL_QRK\");\n        }).catch(error => {\n          commit(\"loading\");\n          console.log(error);\n        });\n      }\n    },\n\n    GET_ALL_QRK({\n      commit\n    }) {\n      commit(\"loading\");\n      http.get(\"/qrk\").then(res => {\n        commit(\"setAllQrk\", res.data);\n        commit(\"loading\");\n      }).catch(error => {\n        console.log(error);\n        commit(\"loading\");\n      });\n    },\n\n    SAVE_MESSWERT({\n      commit,\n      dispatch\n    }, qrk_id, messwert_id, payload) {\n      commit(\"loading\");\n\n      if (messwert_id === \"\") {\n        http.post(`/qrk/${qrk_id}/messwert`, payload).then(res => {\n          commit(\"setServerMessage\", res.data);\n          dispatch(\"GET_ALL_QRK\");\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        http.put(`/qrk/${qrk_id}/messwert/${messwert_id}`, payload).then(res => {\n          commit(\"setServerMessage\", res.data);\n          dispatch(\"GET_ALL_QRK\");\n        }).catch(error => {\n          console.log(error);\n          commit(\"loading\");\n        });\n      }\n    }\n\n  },\n  getters: {\n    token({\n      token\n    }) {\n      return token;\n    },\n\n    qrks(state) {\n      return state.qrks;\n    }\n\n  }\n});\nexport default store;",{"version":3,"sources":["/home/darkwing/dev/quality/client/src/store/index.js"],"names":["Vue","Vuex","http","use","store","Store","modules","state","isAuthenticated","loading","token","qrks","id","titel","x_achse_titel","y_achse_titel","obere_warngrenze","untere_warngrenze","obere_eingriffsgrenze","untere_eingriffsgrenze","stdabw","mittelwert","aktiv","messwerte","datum","wert","valid","bild_pfad","serverMessage","mutations","login_success","logout","setAllQrk","payload","setServerMessage","message","actions","SAVE_QRK","commit","dispatch","qrk_id","formData","method","url","data","then","res","catch","error","console","log","put","GET_ALL_QRK","get","SAVE_MESSWERT","messwert_id","post","getters"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\nimport http from \"../axios-instance\";\r\n\r\nVue.use(Vuex);\r\n\r\nconst store = new Vuex.Store({\r\n  modules: {},\r\n  state: {\r\n    isAuthenticated: true,\r\n    loading: false,\r\n    token: \"\",\r\n    qrks: [\r\n      {\r\n        id: \"aa3aa4-rrt3\",\r\n        titel: \"Titel\",\r\n        x_achse_titel: \"Datum\",\r\n        y_achse_titel: \"Messwert [mL]\",\r\n        obere_warngrenze: 0.0,\r\n        untere_warngrenze: 0.0,\r\n        obere_eingriffsgrenze: 0.0,\r\n        untere_eingriffsgrenze: 0.0,\r\n        stdabw: 0.0,\r\n        mittelwert: 0.0,\r\n        aktiv: true,\r\n        messwerte: [\r\n          {\r\n            id: \"t9t9ne-adef\",\r\n            datum: \"16.04.2019\",\r\n            wert: 10.04,\r\n            valid: true\r\n          },\r\n          {\r\n            id: \"t9n2cb-lolo\",\r\n            datum: \"16.05.2019\",\r\n            wert: 10.02,\r\n            valid: false\r\n          }\r\n        ],\r\n        bild_pfad: \"https://cdn.vuetifyjs.com/images/cards/desert.jpg\"\r\n      },\r\n      {\r\n        id: \"ttet-tasdf\",\r\n        titel: \"Titel 2\",\r\n        x_achse_titel: \"Datum\",\r\n        y_achse_titel: \"Messwert [mL]\",\r\n        obere_warngrenze: 0.0,\r\n        untere_warngrenze: 0.0,\r\n        obere_eingriffsgrenze: 0.0,\r\n        untere_eingriffsgrenze: 0.0,\r\n        stdabw: 0.0,\r\n        mittelwert: 0.0,\r\n        aktiv: true,\r\n        messwerte: [\r\n          {\r\n            id: \"t9t9ne-adef\",\r\n            datum: \"16.04.2019\",\r\n            wert: 10.04,\r\n            valid: false\r\n          },\r\n          {\r\n            id: \"t9n2cb-lolo\",\r\n            datum: \"16.05.2019\",\r\n            wert: 10.02,\r\n            valid: false\r\n          }\r\n        ],\r\n        bild_pfad: \"https://cdn.vuetifyjs.com/images/cards/desert.jpg\"\r\n      }\r\n    ],\r\n    serverMessage: \"\"\r\n  },\r\n  mutations: {\r\n    loading: state => {\r\n      state.loading = !state.loading;\r\n    },\r\n    login_success: state => {\r\n      state.isAuthenticated = true;\r\n      state.loading = false;\r\n    },\r\n    logout: state => {\r\n      state.isAuthenticated = false;\r\n    },\r\n    setAllQrk: (state, payload) => {\r\n      state.qrks = payload.qrks;\r\n    },\r\n    setServerMessage: (state, payload) => {\r\n      state.serverMessage = payload.message;\r\n    }\r\n  },\r\n  actions: {\r\n    SAVE_QRK({ commit, dispatch }, qrk_id, formData) {\r\n      if (qrk_id === \"\") {\r\n        commit(\"loading\");\r\n        http({\r\n          method: \"post\",\r\n          url: \"/qrk\",\r\n          data: {\r\n            titel: formData.titel,\r\n            x_achse_titel: formData.x_achse_titel,\r\n            y_achse_titel: formData.y_achse_titel\r\n          }\r\n        })\r\n          .then(res => {\r\n            dispatch(\"GET_ALL_QRK\");\r\n            commit(\"loading\");\r\n          })\r\n          .catch(error => {\r\n            commit(\"loading\");\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        commit(\"loading\");\r\n        http\r\n          .put(`/qrk/${qrk_id}`, payload)\r\n          .then(res => {\r\n            commit(\"setServerMessage\", res.data);\r\n            dispatch(\"GET_ALL_QRK\");\r\n          })\r\n          .catch(error => {\r\n            commit(\"loading\");\r\n            console.log(error);\r\n          });\r\n      }\r\n    },\r\n    GET_ALL_QRK({ commit }) {\r\n      commit(\"loading\");\r\n      http\r\n        .get(\"/qrk\")\r\n        .then(res => {\r\n          commit(\"setAllQrk\", res.data);\r\n          commit(\"loading\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          commit(\"loading\");\r\n        });\r\n    },\r\n    SAVE_MESSWERT({ commit, dispatch }, qrk_id, messwert_id, payload) {\r\n      commit(\"loading\");\r\n      if (messwert_id === \"\") {\r\n        http\r\n          .post(`/qrk/${qrk_id}/messwert`, payload)\r\n          .then(res => {\r\n            commit(\"setServerMessage\", res.data);\r\n            dispatch(\"GET_ALL_QRK\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        http\r\n          .put(`/qrk/${qrk_id}/messwert/${messwert_id}`, payload)\r\n          .then(res => {\r\n            commit(\"setServerMessage\", res.data);\r\n            dispatch(\"GET_ALL_QRK\");\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            commit(\"loading\");\r\n          });\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    token({ token }) {\r\n      return token;\r\n    },\r\n    qrks(state) {\r\n      return state.qrks;\r\n    }\r\n  }\r\n});\r\nexport default store;\r\n"]}]}